// <auto-generated />
using System;
using EnrolledManagementSystem.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EnrolledManagementSystem.Migrations
{
    [DbContext(typeof(ManagementDbContext))]
    [Migration("20241113043358_UpdateTable_NienKhoa")]
    partial class UpdateTable_NienKhoa
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EnrolledManagementSystem.Entities.Khoa", b =>
                {
                    b.Property<string>("MaKhoa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TenKhoa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaKhoa");

                    b.ToTable("Khoa");
                });

            modelBuilder.Entity("EnrolledManagementSystem.Entities.Khoa_Khoi", b =>
                {
                    b.Property<string>("MaKhoaKhoi")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TenKhoaKhoi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaKhoaKhoi");

                    b.ToTable("Khoa_Khoi");
                });

            modelBuilder.Entity("EnrolledManagementSystem.Entities.LoaiDiem", b =>
                {
                    b.Property<string>("MaLoaiDiem")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("HeSo")
                        .HasColumnType("int");

                    b.Property<string>("TenLoaiDiem")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaLoaiDiem");

                    b.ToTable("LoaiDiem");
                });

            modelBuilder.Entity("EnrolledManagementSystem.Entities.LoaiDiemMon", b =>
                {
                    b.Property<string>("MaKhoa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MaMon")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MaLoai")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SoCotDiem")
                        .HasColumnType("int");

                    b.Property<int>("SoCotDiemBatBuoc")
                        .HasColumnType("int");

                    b.HasKey("MaKhoa", "MaMon", "MaLoai");

                    b.HasIndex("MaLoai");

                    b.HasIndex("MaMon");

                    b.ToTable("LoaiDiemMon");
                });

            modelBuilder.Entity("EnrolledManagementSystem.Entities.LopHoc", b =>
                {
                    b.Property<string>("MaLop")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("HocPhi")
                        .HasColumnType("float");

                    b.Property<string>("MaKhoaKhoi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MaNienKhoa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuongHocVien")
                        .HasColumnType("int");

                    b.Property<string>("TenLop")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("To_BoMonMaToBoMon")
                        .HasColumnType("int");

                    b.HasKey("MaLop");

                    b.HasIndex("MaKhoaKhoi");

                    b.HasIndex("MaNienKhoa");

                    b.HasIndex("To_BoMonMaToBoMon");

                    b.ToTable("LopHoc");
                });

            modelBuilder.Entity("EnrolledManagementSystem.Entities.MonHoc", b =>
                {
                    b.Property<string>("MaMonHoc")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MaKhoaKhoi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("MaToBoMon")
                        .HasColumnType("int");

                    b.Property<string>("TenMonHoc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaMonHoc");

                    b.HasIndex("MaKhoaKhoi");

                    b.HasIndex("MaToBoMon");

                    b.ToTable("MonHoc");
                });

            modelBuilder.Entity("EnrolledManagementSystem.Entities.NienKhoa", b =>
                {
                    b.Property<string>("MaNienKhoa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TenNienKhoa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MaNienKhoa");

                    b.ToTable("NienKhoa");
                });

            modelBuilder.Entity("EnrolledManagementSystem.Entities.To_BoMon", b =>
                {
                    b.Property<int>("MaToBoMon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaToBoMon"), 1L, 1);

                    b.Property<string>("TenToBoMon")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaToBoMon");

                    b.ToTable("To_BoMon");
                });

            modelBuilder.Entity("EnrolledManagementSystem.Entities.LoaiDiemMon", b =>
                {
                    b.HasOne("EnrolledManagementSystem.Entities.Khoa", "Khoa")
                        .WithMany("loaiDiemMons")
                        .HasForeignKey("MaKhoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnrolledManagementSystem.Entities.LoaiDiem", "LoaiDiem")
                        .WithMany("loaiDiemMons")
                        .HasForeignKey("MaLoai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnrolledManagementSystem.Entities.MonHoc", "MonHoc")
                        .WithMany("loaiDiemMons")
                        .HasForeignKey("MaMon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Khoa");

                    b.Navigation("LoaiDiem");

                    b.Navigation("MonHoc");
                });

            modelBuilder.Entity("EnrolledManagementSystem.Entities.LopHoc", b =>
                {
                    b.HasOne("EnrolledManagementSystem.Entities.Khoa_Khoi", "Khoa_Khoi")
                        .WithMany("LopHocs")
                        .HasForeignKey("MaKhoaKhoi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnrolledManagementSystem.Entities.NienKhoa", "NienKhoa")
                        .WithMany("LopHocs")
                        .HasForeignKey("MaNienKhoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnrolledManagementSystem.Entities.To_BoMon", null)
                        .WithMany("LopHocs")
                        .HasForeignKey("To_BoMonMaToBoMon");

                    b.Navigation("Khoa_Khoi");

                    b.Navigation("NienKhoa");
                });

            modelBuilder.Entity("EnrolledManagementSystem.Entities.MonHoc", b =>
                {
                    b.HasOne("EnrolledManagementSystem.Entities.Khoa_Khoi", "Khoa_Khoi")
                        .WithMany("MonHocs")
                        .HasForeignKey("MaKhoaKhoi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnrolledManagementSystem.Entities.To_BoMon", "To_BoMon")
                        .WithMany("MonHoc")
                        .HasForeignKey("MaToBoMon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Khoa_Khoi");

                    b.Navigation("To_BoMon");
                });

            modelBuilder.Entity("EnrolledManagementSystem.Entities.Khoa", b =>
                {
                    b.Navigation("loaiDiemMons");
                });

            modelBuilder.Entity("EnrolledManagementSystem.Entities.Khoa_Khoi", b =>
                {
                    b.Navigation("LopHocs");

                    b.Navigation("MonHocs");
                });

            modelBuilder.Entity("EnrolledManagementSystem.Entities.LoaiDiem", b =>
                {
                    b.Navigation("loaiDiemMons");
                });

            modelBuilder.Entity("EnrolledManagementSystem.Entities.MonHoc", b =>
                {
                    b.Navigation("loaiDiemMons");
                });

            modelBuilder.Entity("EnrolledManagementSystem.Entities.NienKhoa", b =>
                {
                    b.Navigation("LopHocs");
                });

            modelBuilder.Entity("EnrolledManagementSystem.Entities.To_BoMon", b =>
                {
                    b.Navigation("LopHocs");

                    b.Navigation("MonHoc");
                });
#pragma warning restore 612, 618
        }
    }
}
